{"version":3,"sources":["components/Footer/Footer.js","services/country.service.js","components/Country/CountryStyles.js","constants/constants.js","components/Country/CountryCard.js","components/Country/CountryFilter.js","components/Country/CountryList.js","components/Country/Panel/CountryPanelDetails.js","components/Country/Panel/CountryPanel.js","components/Country/CountryContainer.js","components/Home/Home.js","components/Home/HomeStyles.js","themes/MainTheme.js","App.js","serviceWorker.js","index.js"],"names":["Footer","Typography","variant","href","target","rel","GetCountriesService","name","resolve","reject","fetch","then","res","json","data","catch","CountryListStyles","makeStyles","theme","row","maxWidth","maxHeight","minWidth","minHeight","display","justifyContent","margin","spacing","backgroundColor","loadingRow","color","countryList","CountryCardStyles","countryButton","backgroundRepeat","backgroundPosition","backgroundSize","cursor","border","outline","CountryPanelStyles","panel","position","top","bottom","left","right","zIndex","panelContainer","height","background","marginLeft","marginRight","panelBackdrop","width","head","zindex","palette","primary","main","alignItems","arrowBack","verticalAlign","title","contentPanel","overflowY","paddingBottom","padding","countryCardPanel","paddingLeft","separator","marginTop","flexSection","flexWrap","justiftContent","primaryInfo","item","borderCountriesContainer","container","overflowWrap","borderCountry","marginBottom","nonBorderCountry","useStyles","CountryCard","props","classes","type","className","onClick","e","isDecoration","openCountry","country","handlerOnClick","style","backgroundImage","flag","Filter","Grid","component","TextField","required","fullWidth","label","autoComplete","value","filter","onChange","setFilter","autoFocus","CountryList","useState","element","selectCountry","getBoundingClientRect","id","countries","toLowerCase","indexOf","GridList","cellHeight","map","i","key","partialVisibility","isVisible","CountryDetailsPanel","borders","setBorders","useEffect","borderArray","push","getBordersCountries","nativeName","capital","demonym","region","subregion","languages","language","length","align","Avatar","src","bigAvatar","population","timezones","timezone","latlng","currencies","code","symbol","Details","resetAnimation","setResetAnimation","panelAnimation","useSpring","transform","from","reset","reverse","onRest","unselectCountry","resetAnimationInverted","div","IconButton","fontSize","CountryPanelDetails","CountryContainer","setCountries","selectedCountry","setSelectedCountry","Promise","response","flagOriginPosition","elementId","show","CountryPanel","alpha3Code","includes","flagWidth","flagHeight","root","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","content","flexGrow","blockContent","mainContent","contentShift","Home","useTheme","open","setOpen","countryOpen","setCountryOpen","CssBaseline","AppBar","clsx","Toolbar","aria-label","edge","noWrap","Drawer","anchor","paper","direction","Divider","List","ListItem","button","ListItemIcon","ListItemText","Maintheme","createMuiTheme","light","green","dark","contrastText","secondary","brown","status","danger","App","ThemeProvider","MainTheme","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e4b3211e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n      <Typography variant=\"body2\">Webpage made by Fer Alonso Maccari</Typography>\r\n      <Typography variant=\"body2\">\r\n        Powered by{\" \"}\r\n        <b>\r\n          <a href=\"https://restcountries.eu/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            'Rest Countries'\r\n          </a>\r\n        </b>\r\n      </Typography>\r\n      <Typography variant=\"body2\">\r\n        Github{\" \"}\r\n        <b>\r\n          <a href=\"https://github.com/feralonsomaccari/what-country\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            page\r\n          </a>\r\n        </b>\r\n      </Typography>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","function GetCountriesService(name, resolve, reject) {\r\n  let url = \"https://restcountries.eu/rest/v2/all\";\r\n  // if (name) url = \"https://restcountries.eu/rest/v2/name/\" + name; // This is if I want to fetch an especific country in te future\r\n  fetch(url)\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      resolve(data);\r\n    })\r\n    .catch(data => {\r\n      reject(data);\r\n    });\r\n}\r\n\r\nexport default GetCountriesService;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { CARD_WIDTH, CARD_HEIGHT } from \"../../constants/constants\";\r\n\r\nexport const CountryListStyles = makeStyles(theme => ({\r\n  row: {\r\n    maxWidth: CARD_WIDTH,\r\n    maxHeight: CARD_HEIGHT,\r\n    minWidth: CARD_WIDTH,\r\n    minHeight: CARD_HEIGHT,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    margin: theme.spacing(1),\r\n    backgroundColor: \"#f2f2f2\"\r\n  },\r\n  loadingRow: {\r\n    color: \"transparent\"\r\n  },\r\n  countryList: {\r\n    justifyContent: \"center\"\r\n  }\r\n}));\r\n\r\nexport const CountryCardStyles = makeStyles({\r\n  countryButton: {\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \" center center\",\r\n    maxWidth: CARD_WIDTH,\r\n    maxHeight: CARD_HEIGHT,\r\n    minWidth: CARD_WIDTH,\r\n    minHeight: CARD_HEIGHT,\r\n    backgroundSize: \"75%\",\r\n    cursor: \"pointer\",\r\n    backgroundColor: \"#f2f2f2\",\r\n    border: \"none\",\r\n    \"&:focus\": {\r\n      outline: \"none\"\r\n    },\r\n    \"&:active\": {\r\n      backgroundColor: \"#eeeeee\"\r\n    }\r\n  }\r\n});\r\n\r\nexport const CountryPanelStyles = makeStyles(theme => ({\r\n  panel: {\r\n    position: \"fixed\",\r\n    top: \"0\",\r\n    bottom: \"0\",\r\n    left: \"0\",\r\n    right: \"0\",\r\n    zIndex: \"1300\"\r\n  },\r\n  panelContainer: {\r\n    position: \"absolute\",\r\n    maxWidth: \"38rem\",\r\n    height: \"85%\",\r\n    background: \"#fff\",\r\n    zIndex: \"1302\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    right: \"1rem\",\r\n    left: \"1rem\",\r\n    bottom: \"0%\",\r\n    display: \"grid\"\r\n  },\r\n  panelBackdrop: {\r\n    position: \"absolute\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    background: \"rgb(0, 0, 0, .5)\"\r\n  },\r\n  head: {\r\n    position: \"relative\",\r\n    zindex: \"1303\",\r\n    background: theme.palette.primary.main,\r\n    alignItems: \"center\",\r\n    color: \"#fff\"\r\n  },\r\n  arrowBack: {\r\n    color: \"#fff\",\r\n    display: \"inline-block\",\r\n    verticalAlign: \"middle\"\r\n  },\r\n  title: {\r\n    display: \"inline-block\",\r\n    verticalAlign: \"middle\"\r\n  },\r\n  contentPanel: {\r\n    overflowY: \"scroll\",\r\n    paddingBottom: \"2rem\",\r\n    height: \"100%\",\r\n    padding: theme.spacing(2),\r\n    backgroundColor: \"#fff\"\r\n  },\r\n  countryCardPanel: {\r\n    paddingLeft: theme.spacing(4)\r\n  },\r\n  separator: {\r\n    width: \"100%\",\r\n    color: \"white\",\r\n    marginTop: theme.spacing(2),\r\n    justifyContent: \"center\",\r\n    backgroundColor: theme.palette.primary.main\r\n  },\r\n  flexSection: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justiftContent: \"center\",\r\n  },\r\n  primaryInfo:{\r\n    marginTop: \"1rem\",\r\n  },\r\n  item: {\r\n    width: \"100%\",\r\n    paddingLeft: theme.spacing(4)\r\n  },\r\n  borderCountriesContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    padding: theme.spacing(2),\r\n    flexWrap: \"wrap\"\r\n  },\r\n  container: {\r\n    marginTop: theme.spacing(2),\r\n    overflowWrap: \"break-word\"\r\n  },\r\n  borderCountry: {\r\n    margin: theme.spacing(2),\r\n    marginBottom: 0\r\n  },\r\n  nonBorderCountry: {\r\n    padding: theme.spacing(4),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  \"@media (min-width: 36.875rem)\": {\r\n    item: {\r\n      width: \"100%\",\r\n      paddingLeft: theme.spacing(4)\r\n    },\r\n    primaryInfo:{\r\n      marginTop: \"0\",\r\n    }\r\n  }\r\n}));\r\n","export const CARD_WIDTH = \"12rem\";\r\nexport const CARD_HEIGHT = \"12rem\";\r\nexport const DRAWER_WIDTH = 150;\r\n","import React from \"react\";\r\nimport { CountryCardStyles } from \"./CountryStyles\";\r\n\r\nconst useStyles = CountryCardStyles;\r\n\r\nexport default function CountryCard(props) {\r\n  const classes = useStyles();\r\n\r\n  const handlerOnClick = e => {\r\n    if (!props.isDecoration) props.openCountry(props.country, e.target);\r\n  };\r\n\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className={classes.countryButton}\r\n      onClick={e => handlerOnClick(e)}\r\n      style={{ backgroundImage: `url(${props.country.flag})` }}\r\n    ></button>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nfunction Filter(props) {\r\n  return (\r\n    <>\r\n      <Grid container component=\"main\">\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          label=\"Country\"\r\n          name=\"country\"\r\n          autoComplete=\"filter\"\r\n          value={props.filter}\r\n          onChange={e => props.setFilter(e.target.value)}\r\n          autoFocus\r\n        ></TextField>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React, { useState } from \"react\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridList\";\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\n\r\nimport Country from \"./CountryCard\";\r\nimport Filter from \"./CountryFilter\";\r\nimport { CountryListStyles } from \"./CountryStyles\";\r\n\r\nconst useStyles = CountryListStyles;\r\n\r\nfunction CountryList(props) {\r\n  const classes = useStyles();\r\n\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  const openCountry = (country, element) => {\r\n    props.selectCountry(country, element.getBoundingClientRect(), element.id);\r\n  };\r\n\r\n  let countries = props.countries.filter(country => {\r\n    return country.name.toLowerCase().indexOf(filter.toLowerCase()) !== -1;\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Filter filter={filter} setFilter={setFilter}></Filter>\r\n      <hr />\r\n      <GridList cellHeight={160} className={classes.countryList}>\r\n        {countries.map((country, i) => (\r\n          <div key={i} className={classes.row}>\r\n            <VisibilitySensor partialVisibility>\r\n              {({ isVisible }) => {\r\n                return isVisible ? (\r\n                  <GridListTile>\r\n                    <Country country={country} openCountry={openCountry}></Country>\r\n                  </GridListTile>\r\n                ) : (\r\n                  <p className={classes.loadingRow}>.</p>\r\n                );\r\n              }}\r\n            </VisibilitySensor>\r\n          </div>\r\n        ))}\r\n      </GridList>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CountryList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { CountryPanelStyles } from \"../CountryStyles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CountryCard from \"../CountryCard\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nconst useStyles = CountryPanelStyles;\r\n\r\nfunction CountryDetailsPanel(props) {\r\n  const classes = useStyles();\r\n  const [borders, setBorders] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let borderArray = [];\r\n    props.country.borders.map(border => {\r\n      return borderArray.push(props.getBordersCountries(border));\r\n    });\r\n    setBorders(borderArray);\r\n  }, [props]);\r\n\r\n  return (\r\n    <div className={classes.contentPanel}>\r\n      <div className={classes.flexSection}>\r\n        <div className={classes.countryCardPanel}>\r\n          <CountryCard country={props.country} isDecoration={true} ></CountryCard>\r\n        </div>\r\n        <div className={classes.primaryInfo}>\r\n          <Typography className={classes.item} variant=\"h5\">\r\n            {props.country.nativeName}\r\n          </Typography>\r\n          <hr />\r\n          {/* Some countries dont have a capital */}\r\n          {props.country.capital ? (\r\n            <Typography className={classes.item} variant=\"body1\">\r\n              Capital: {props.country.capital}\r\n            </Typography>\r\n          ) : (\r\n            <div>{null}</div>\r\n          )}\r\n\r\n          <Typography className={classes.item} variant=\"body1\">\r\n            Demonym: {props.country.demonym}\r\n          </Typography>\r\n          <Typography className={classes.item} variant=\"body1\">\r\n            Region: {props.country.region}\r\n          </Typography>\r\n          <Typography className={classes.item} variant=\"body1\">\r\n            Subregion: {props.country.subregion}\r\n          </Typography>\r\n          <Typography className={classes.item} variant=\"body1\">\r\n            Languages:\r\n            {props.country.languages.map((language, i) => (\r\n              <span key={i}>\r\n                {\" \"}\r\n                {language.name}\r\n                {i < props.country.languages.length - 1 ? \",\" : \"\"}\r\n              </span>\r\n            ))}\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n\r\n      {/* BORDERS */}\r\n      <div className={classes.separator}>\r\n        <Typography variant=\"subtitle1\" align=\"center\">\r\n          Borders\r\n        </Typography>\r\n      </div>\r\n      {props.country.borders.length ? (\r\n        <div className={classes.borderCountriesContainer}>\r\n          {borders.map((border, i) => (\r\n            <Avatar title={border.name} src={border.flag} className={`${classes.bigAvatar} ${classes.borderCountry}`} key={i} />\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <div className={(classes.borderCountry, classes.nonBorderCountry)}>This country has no borders</div>\r\n      )}\r\n\r\n      {/* MISCELLANEOUS INFO */}\r\n      <div className={classes.separator}>\r\n        <Typography variant=\"subtitle1\" align=\"center\">\r\n          Miscellaneous info\r\n        </Typography>\r\n      </div>\r\n\r\n      <div className={classes.container}>\r\n        <Typography className={classes.item} variant=\"body1\">\r\n          Population: {props.country.population}\r\n        </Typography>\r\n        <Typography className={classes.item} variant=\"body1\">\r\n          Timezones:\r\n          {props.country.timezones.map((timezone, i) => (\r\n            <span key={i}>\r\n              {\" \"}\r\n              {timezone}\r\n              {i < props.country.timezones.length - 1 ? \",\" : \"\"}\r\n            </span>\r\n          ))}\r\n        </Typography>\r\n        <Typography className={classes.item} variant=\"body1\">\r\n          Latitude: {props.country.latlng[0]}\r\n        </Typography>\r\n        <Typography className={classes.item} variant=\"body1\">\r\n          Longitude: {props.country.latlng[1]}\r\n        </Typography>\r\n        <hr />\r\n        <Typography className={classes.item} variant=\"body1\">\r\n          Currency: {props.country.currencies[0].name}\r\n        </Typography>\r\n        <Typography className={classes.item} variant=\"body1\">\r\n          Currency Code: {props.country.currencies[0].code}\r\n        </Typography>\r\n        <Typography className={classes.item} variant=\"body1\">\r\n          Currency Symbol: {props.country.currencies[0].symbol}\r\n        </Typography>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CountryDetailsPanel;\r\n","import React, { useState } from \"react\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { CountryPanelStyles } from \"../CountryStyles\";\r\nimport CountryPanelDetails from \"./CountryPanelDetails\";\r\n\r\nconst useStyles = CountryPanelStyles;\r\n\r\nfunction Details(props) {\r\n  const classes = useStyles();\r\n\r\n  const [resetAnimation, setResetAnimation] = useState(false);\r\n\r\n  const panelAnimation = useSpring({\r\n    transform: \"translateY(0%)\",\r\n    from: { transform: \"translateY(100%)\" },\r\n    reset: resetAnimation,\r\n    reverse: resetAnimation,\r\n    onRest: () => {\r\n      if (resetAnimation) {\r\n        props.unselectCountry();\r\n      }\r\n    }\r\n  });\r\n\r\n  const resetAnimationInverted = () => {\r\n    setResetAnimation(true);\r\n  };\r\n\r\n \r\n  return (\r\n    <div className={classes.panel}>\r\n      <animated.div className={classes.panelContainer} style={panelAnimation}>\r\n        <div className={classes.head}>\r\n          <IconButton onClick={resetAnimationInverted}>\r\n            <ArrowBackIcon fontSize=\"large\" className={classes.arrowBack} />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            {props.country.name}\r\n          </Typography>\r\n        </div>\r\n        <CountryPanelDetails country={props.country} getBordersCountries={props.getBordersCountries}></CountryPanelDetails>\r\n      </animated.div>\r\n      <div className={classes.panelBackdrop} onClick={resetAnimationInverted}></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Details;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport GetCountriesService from \"../../services/country.service\";\r\nimport CountryList from \"./CountryList\";\r\nimport CountryPanel from \"./Panel/CountryPanel\";\r\n\r\nfunction CountryContainer(props) {\r\n  const [countries, setCountries] = useState([]);\r\n  const [selectedCountry, setSelectedCountry] = useState({});\r\n\r\n  const getCountries = () => {\r\n    let countriesPromise = new Promise((resolve, reject) => {\r\n      GetCountriesService(\"\", resolve, reject);\r\n    });\r\n    countriesPromise.then(response => {\r\n      setCountries(response);\r\n    });\r\n  };\r\n\r\n  const selectCountry = (country, flagOriginPosition, elementId) => {\r\n    setSelectedCountry({\r\n      show: true,\r\n      country: country,\r\n      elementId: elementId\r\n    });\r\n    // props.setCountryOpen(true);\r\n  };\r\n  const unselectCountry = () => {\r\n    setSelectedCountry({});\r\n    // props.setCountryOpen(false);\r\n  };\r\n\r\n  const getBordersCountries = alpha3Code => {\r\n    let borderCountry = countries.filter(country => country.alpha3Code.includes(alpha3Code));\r\n    return borderCountry[0];\r\n  };\r\n\r\n  // Like ComponentDidMount\r\n  useEffect(() => {\r\n    getCountries();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <CountryList countries={countries} selectCountry={selectCountry}></CountryList>\r\n      {selectedCountry.show && (\r\n        <CountryPanel\r\n          unselectCountry={unselectCountry}\r\n          getBordersCountries={getBordersCountries}\r\n          country={selectedCountry.country}\r\n          show={selectedCountry.show}\r\n          flagWidth={selectedCountry.flagWidth}\r\n          flagHeight={selectedCountry.flagHeight}\r\n          elementId={selectedCountry.elementId}\r\n        ></CountryPanel>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CountryContainer;\r\n\r\n/* Basic method of Listing the Json of Countries, this is simple but very slow, the idea is to replace this\r\n  <div>\r\n    <GridList cols={5} cellHeight=\"auto\" spacing={25}>\r\n      {drawItems.map((country, i) => (\r\n        <GridListTile key={i}>\r\n          <CountryCard key={country.alpha2Code} num={i} name={country.name} flag={country.flag} ></CountryCard>\r\n        </GridListTile>\r\n      ))}\r\n    </GridList>\r\n  </div> \r\n*/\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\n\r\nimport Footer from \"../Footer/Footer\";\r\nimport CountryContainer from \"../Country/CountryContainer\";\r\nimport { HomeStyles } from \"./HomeStyles\";\r\n\r\nconst useStyles = HomeStyles;\r\n\r\nexport default function Home() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = useState(true);\r\n  const [countryOpen, setCountryOpen] = useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton color=\"inherit\" aria-label=\"open drawer\" onClick={handleDrawerOpen} edge=\"start\" className={clsx(classes.menuButton, open && classes.hide)}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap></Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <Typography variant=\"caption\" noWrap>\r\n            What Country\r\n          </Typography>\r\n          <IconButton onClick={handleDrawerClose}>{theme.direction === \"ltr\" ? <ChevronLeftIcon /> : <ChevronRightIcon />}</IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <ListItem button key=\"About\" component=\"a\" href=\"https://github.com/feralonsomaccari/what-country\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <ListItemIcon>\r\n              <MailIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"About\" />\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n      <main\r\n        className={clsx(classes.content, {[classes.contentShift]: open}, {[classes.blockContent]: countryOpen}\r\n        )}\r\n      >\r\n        <div className={classes.mainContent}>\r\n          <div className={classes.drawerHeader} />\r\n\r\n          <Typography variant=\"h4\" color=\"textSecondary\">\r\n            What Country\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            Search for any county or navigate till you find a cool looking flag\r\n          </Typography>\r\n          <CountryContainer setCountryOpen={setCountryOpen}></CountryContainer>\r\n        </div>\r\n        <Footer></Footer>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { DRAWER_WIDTH } from \"../../constants/constants\";\r\n\r\nexport const HomeStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    height: \"100%\"\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    })\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${DRAWER_WIDTH}px)`,\r\n    marginLeft: DRAWER_WIDTH,\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  hide: {\r\n    display: \"none\"\r\n  },\r\n  drawer: {\r\n    width: DRAWER_WIDTH,\r\n    flexShrink: 0\r\n  },\r\n  drawerPaper: {\r\n    width: DRAWER_WIDTH\r\n  },\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-end\"\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    }),\r\n    marginLeft: -DRAWER_WIDTH\r\n  },\r\n  blockContent:{\r\n    overflowY:\"hidden\",\r\n  },\r\n  mainContent: {\r\n    padding: theme.spacing(3),\r\n    minHeight: \"100%\",\r\n    marginBottom: \"-10rem\",\r\n    paddingBottom: \"12rem\",\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    }),\r\n    marginLeft: 0\r\n  }\r\n}));\r\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { brown, green } from \"@material-ui/core/colors/\";\r\n\r\nconst Maintheme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: green[500],\r\n      main: green[700],\r\n      dark: green[800],\r\n      contrastText: \"#fff\"\r\n    },\r\n    secondary: brown\r\n  },\r\n  status: {\r\n    danger: \"orange\"\r\n  }\r\n});\r\n\r\nexport default Maintheme;\r\n","import React from \"react\";\r\nimport Home from \"./components/Home/Home\";\r\nimport MainTheme from \"./themes/MainTheme\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div id=\"app\">\r\n      <ThemeProvider theme={MainTheme}>\r\n        <Home></Home>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}